{
  "openapi": "3.0.2",
  "info": {
    "title": "AI Microservices Gateway", 
    "description": "Streamlined gateway for AI-powered masking APIs with YOLO and OpenAI integration",
    "version": "1.0",
    "contact": {
      "email": "support@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "v1",
      "description": "AI Inference Endpoints"
    },
    {
      "name": "api", 
      "description": "Public Masking APIs"
    }
  ],
  "paths": {
    "/v1/health": {
      "get": {
        "tags": ["v1"],
        "summary": "Health check for all services",
        "responses": {
          "200": {
            "description": "Service health status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "gateway_status": {"type": "string"},
                    "services": {"type": "object"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/completions": {
      "post": {
        "tags": ["v1"],
        "summary": "OpenAI chat completions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat completion response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "choices": {"type": "array"},
                    "usage": {"type": "object"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/mask/face": {
      "post": {
        "tags": ["api"],
        "summary": "Face detection for masking",
        "description": "Detect faces in image and return bounding boxes",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image file"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Face bounding boxes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaskResponse"
                },
                "example": {
                  "data": [
                    [100.5, 150.2, 200.8, 250.9],
                    [300.1, 400.3, 450.7, 550.2]
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - No file provided"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/mask/location": {
      "post": {
        "tags": ["api"],
        "summary": "Location content detection for masking",
        "description": "Detect location-related content and return bounding boxes",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image file"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Location content bounding boxes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaskResponse"
                },
                "example": {
                  "data": [
                    [50.0, 75.5, 180.3, 120.8],
                    [250.2, 300.1, 400.6, 380.9]
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - No file provided"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/mask/pii": {
      "post": {
        "tags": ["api"],
        "summary": "PII detection in OCR data",
        "description": "Detect PII in OCR values and return bounding boxes",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image file"
                  },
                  "ocr_values": {
                    "type": "string",
                    "description": "JSON string of OCR values",
                    "example": "[{\"text\": \"john@email.com\", \"bbox\": [100, 200, 300, 220], \"confidence\": 0.95}]"
                  }
                },
                "required": ["file", "ocr_values"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PII bounding boxes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaskResponse"
                },
                "example": {
                  "data": [
                    [120.0, 200.5, 350.8, 230.2],
                    [400.1, 450.3, 600.7, 480.9]
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing file or OCR data"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChatRequest": {
        "type": "object",
        "required": ["model", "messages"],
        "properties": {
          "model": {
            "type": "string",
            "example": "gpt-4",
            "description": "OpenAI model to use"
          },
          "messages": {
            "type": "array",
            "items": {"type": "object"},
            "example": [{"role": "user", "content": "Hello"}],
            "description": "Chat messages array"
          },
          "temperature": {
            "type": "number",
            "default": 0.7,
            "description": "Randomness in response (0-1)"
          },
          "max_tokens": {
            "type": "integer", 
            "default": 128,
            "description": "Maximum tokens in response"
          }
        }
      },
      "MaskResponse": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {"type": "number"},
              "minItems": 4,
              "maxItems": 4
            },
            "description": "Array of bounding boxes in format [[x1,y1,x2,y2], ...]",
            "example": [
              [100.5, 150.2, 200.8, 250.9],
              [300.1, 400.3, 450.7, 550.2]
            ]
          }
        }
      },
      "OCRValue": {
        "type": "object",
        "required": ["text", "bbox"],
        "properties": {
          "text": {
            "type": "string",
            "description": "Detected text",
            "example": "john.doe@email.com"
          },
          "bbox": {
            "type": "array",
            "items": {"type": "number"},
            "minItems": 4,
            "maxItems": 4,
            "description": "Bounding box [x1,y1,x2,y2]",
            "example": [100, 200, 300, 220]
          },
          "confidence": {
            "type": "number",
            "description": "OCR confidence score",
            "example": 0.95
          }
        }
      }
    }
  }
}
